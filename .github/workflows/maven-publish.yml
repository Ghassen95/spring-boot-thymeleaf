# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  release:
    types: [created]
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'adopt'
    - name: Build with Maven
      run: mvn --batch-mode --update-snapshots package

    - name: Publish to GitHub Packages Apache Maven
      run: mvn --batch-mode deploy
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Get project version from pom.xml
      id: project_version
      run: |
        echo "::set-output name=PROJECT_VERSION::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
    - name: "Push container image to ACR (Azure Container Registry)"
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/spring-boot-thymeleaf:${{ steps.project_version.outputs.PROJECT_VERSION }}
        docker image tag ${{ secrets.REGISTRY_LOGIN_SERVER }}/spring-boot-thymeleaf:${{ steps.project_version.outputs.PROJECT_VERSION }} ${{ secrets.REGISTRY_LOGIN_SERVER }}/spring-boot-thymeleaf:latest
        docker push --all-tags ${{ secrets.REGISTRY_LOGIN_SERVER }}/spring-boot-thymeleaf